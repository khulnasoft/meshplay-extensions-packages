name: Meshplay Extension Test
on:
  workflow_call:
    inputs:
      checkout_ref:
        required: true
        type: string
      pr_number:
        default: ""
        required: false
        type: string
      test_command:
        default: "make test"
        required: false
        type: string
    secrets:
      PROVIDER_TOKEN:
        required: true
      NODE_VERSION:
        required: true
      GO_VERSION:
        required: true
      ORG_REPO_TOKEN:
        required: true
      CYPRESS_RECORD_KEY:
        required: true
      KHULNASOFT_CLOUD_USERNAME:
        required: true
      KHULNASOFT_CLOUD_PASSWORD:
        required: true
      KHULNASOFT_CLOUD_TESTING_BOT_EMAIL:
        required: true
      KHULNASOFT_CLOUD_TESTING_BOT_PASSWORD:
        required: true

jobs:
  comment-starting-point:
    runs-on: ubuntu-24.04
    if: ${{ github.event.inputs.pr_number != '' }}
    steps:
      - name: comment starting point
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.ORG_REPO_TOKEN }}
          repository: "khulnasoft/meshplay-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          message: "Starting [Meshplay Extensions tests](https://github.com/khulnasoft/meshplay-extensions-packages/actions/runs/${{ github.run_id }})..."
          recreate: true
  build-ui-and-server:
    uses: meshplay/meshplay/.github/workflows/build-ui-server-reusable-workflow.yml@master
    secrets:
      NODE_VERSION: "20.x"
      GO_VERSION: ${{ secrets.GO_VERSION }}
  comment-success:
    runs-on: ubuntu-24.04
    needs: [build-ui-and-server]
    if: ${{ github.event.inputs.pr_number != '' }}
    steps:
      - name: comment progress
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.ORG_REPO_TOKEN }}
          repository: "khulnasoft/meshplay-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          message: ":heavy_check_mark: Meshplay UI and Meshplay Server builds complete."
          append: true
  build-meshplay-extension:
    uses: ./.github/workflows/build-extension-reusable.yml
    secrets: inherit
    with:
      checkout_ref: ${{ inputs.checkout_ref }}
      pr_number: ${{ inputs.pr_number }}
      comment_id: extension-test
  tests-ui-e2e:
    needs: [build-ui-and-server, build-meshplay-extension]
    name: UI end-to-end tests
    runs-on: ubuntu-24.04
    outputs:
      test-results: ${{ steps.run_tests.outputs.test-results }}
    steps:
      - name: comment progress start
        if: ${{ github.event.inputs.pr_number != '' }}
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.ORG_REPO_TOKEN }}
          repository: "khulnasoft/meshplay-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          message: ":heavy_check_mark: Setting up test environment..."
          append: true
      - name: Check out Meshplay code
        uses: actions/checkout@v4
        with:
          repository: meshplay/meshplay
          fetch-depth: 1
          path: meshplay
      - name: Check out meshplay-consul code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: khulnasoft/meshplay-consul
          path: ./meshplay-consul
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshplay
          path: meshplay/server/cmd/
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ secrets.GO_VERSION }}
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: "kind-cluster"
      - name: Create a out/ folder in meshplay ui
        run: |
          mkdir -p meshplay/ui/out
          mkdir -p meshplay/provider-ui/out/

      - name: Download Meshplay-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshplay-ui-build
          path: meshplay/ui/out/

      - name: Download Meshplay-provider-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshplay-provider-ui build
          path: meshplay/provider-ui/out/

      - name: Update /etc/hosts
        run: echo "127.0.0.1 meshplaylocal.khulnasoft.com" | sudo tee -a /etc/hosts
      - name: Run meshplay-consul
        run: |
          mkdir -p /home/runner/.meshplay/bin
          cd ./meshplay-consul
          go run main.go &
          sleep 60
      - name: Set Release extensions
        run: |
          curl -s https://api.github.com/repos/khulnasoft/meshplay-extensions-packages/releases >> extension_releases.json
          export TAG=$(jq .[0].tag_name extension_releases.json)
          echo tag=$TAG >> $GITHUB_ENV
          echo $TAG
      - name: make directories
        run: |
          echo ${{env.tag}}
          echo ${{env}}
          mkdir -p /home/runner/.meshplay/provider/Meshplay/${{env.tag}}/provider/
      - name: Run backend
        working-directory: meshplay
        env:
          PROVIDER_BASE_URLS: https://cloud.khulnasoft.com
          PORT: 9081
          ADAPTER_URLS: "meshplaylocal.khulnasoft.com:10000 meshplaylocal.khulnasoft.com:10001 meshplaylocal.khulnasoft.com:10002 meshplaylocal.khulnasoft.com:10003 meshplaylocal.khulnasoft.com:10004 meshplaylocal.khulnasoft.com:10008 meshplaylocal.khulnasoft.com:10009 meshplaylocal.khulnasoft.com:10007"
        run: |
          cd server/cmd
          chmod +x ./main
          BUILD=${{env.tag}} ./main &
      - name: Download Meshplay-extension-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshplay-extension-ui
          path: provider
      - name: Move provider files
        run: |
          mv /home/runner/work/meshplay-extensions-packages/meshplay-extensions-packages/provider/ /home/runner/.meshplay/provider/Meshplay/${{env.tag}}/

      - name: Checkout Meshplay-extensions code
        uses: actions/checkout@v4
        with:
          repository: khulnasoft/meshplay-extensions
          path: ./meshplay-extensions
          fetch-depth: 1
          ref: ${{ inputs.checkout_ref }}
          token: ${{ secrets.ORG_REPO_TOKEN }}

      - name: Install Meshplay Extension dependencies
        working-directory: meshplay-extensions
        run: cd meshmap; npm ci; cd ../

      - name: show tree
        run: tree  -L 2

      - name: Install Playwright dependencies
        working-directory: meshplay-extensions
        run: ls && make test-setup

      - name: comment progress start
        uses: hasura/comment-progress@v2.3.0
        if: ${{ github.event.inputs.pr_number != '' }}
        with:
          github-token: ${{ secrets.ORG_REPO_TOKEN }}
          repository: "khulnasoft/meshplay-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          message: ":heavy_check_mark: Test environment ready. Starting tests..."
          append: true

      - name: Run  Tests
        id: run_tests
        working-directory: meshplay-extensions
        run: |
          ${{ inputs.test_command }}
        env:
          PROVIDER_TOKEN: ${{ secrets.PROVIDER_TOKEN }}
          MESHPLAY_SERVER_URL: "http://localhost:9081"
          REMOTE_PROVIDER_URL: "https://cloud.khulnasoft.com"
          REMOTE_PROVIDER_USER_EMAIL: ${{ secrets.KHULNASOFT_CLOUD_TESTING_BOT_EMAIL }}
          REMOTE_PROVIDER_USER_PASSWORD: ${{ secrets.KHULNASOFT_CLOUD_TESTING_BOT_PASSWORD }}
      - name: Test reporter
        uses: actions/github-script@v7
        id: test-reports
        with:
          script: |
            const fs = require('fs')
            const E2ETestReporter = String(fs.readFileSync('./meshplay-extensions/meshmap/test-report.md'))

            return E2ETestReporter
          result-encoding: string
      - name: comment the summary
        uses: hasura/comment-progress@v2.3.0
        if: ${{ always() && github.event.inputs.pr_number != '' }}
        with:
          message: |
            ${{steps.test-reports.outputs.result}}
          github-token: ${{ secrets.ORG_REPO_TOKEN }}
          repository: "khulnasoft/meshplay-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          append: true

      - uses: actions/upload-artifact@v4
        id: test-results
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: meshplay-extensions/meshmap/test-results/
          retention-days: 30

      - uses: actions/upload-artifact@v4
        id: test-relationship-results
        if: ${{ !cancelled() && inputs.test_command == 'make test-relationship' }}
        with:
          name: relationship-playwright-report
          path: meshplay-extensions/meshmap/relationship-*.json
          retention-days: 30

      - name: Comment Test failure
        uses: hasura/comment-progress@v2.3.0
        if: ${{ failure() && github.event.inputs.pr_number != '' }}
        with:
          github-token: ${{ secrets.ORG_REPO_TOKEN }}
          repository: "khulnasoft/meshplay-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          message: ":x: One or more tests have failed."
          append: true

      - name: Comment Final Status
        if: ${{ always() && github.event.inputs.pr_number != '' }}
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.ORG_REPO_TOKEN }}
          repository: "khulnasoft/meshplay-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          message: ":heavy_check_mark: Download Extension [test results](${{ steps.test-results.outputs.artifact-url }})."
          append: true
